allprojects  {
  apply plugin: 'maven'
  apply plugin: 'java'

  group = 'com.kinvey'
  version = '2.9.4'
}

subprojects {
  apply plugin: 'java'
  sourceCompatibility = 1.5
  targetCompatibility = 1.5

  
  repositories {
    mavenLocal()
    
    maven { url "https://build.kinvey.com/nexus/content/repositories/thirdparty" }
    maven { url "https://oss.sonatype.org/content/repositories/releases/" }
    maven { url "file:/Users/edward/.m2/repository/" }
    maven { url "http://repo1.maven.org/maven2" }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
  }

  configurations.all {
  }
}

//task release will do the following:

//run clean
//run build
//run copyAndroid
//run copyJava
//run zipAndroid
//run zipJava
//run aarAndroid
//run docgen


task copyAndroid(type: Copy) {
  from 'android-lib/build/libs'
  from 'java-api-core/build/libs'
  into 'release/build/android'
}

task copyJava(type: Copy) {
  from 'java-lib/build/libs'
  from 'java-api-core/build/libs'
  into 'release/build/nativejava'
}

task zipAndroid(type: Zip) {
    from 'release/build/android'
    from 'release/dependencies'
    into('release/zipped') 
    println zipAndroid.archiveName
    println relativePath(zipAndroid.destinationDir)
    println relativePath(zipAndroid.archivePath)
}

task zipJava(type: Zip) {
    from 'release/build/java'
    from 'release/dependencies'
    into('release/zipped') 
}

task aarAndroid(){}
task docgen(){}

task release(dependsOn: ['clean', 'build', 'copyAndroid', 'copyJava', 'zipAndroid', 'zipJava', 'aarAndroid', 'docgen']){
    description 'Performs the complete release process (except for bumping version number!)'
}
build.mustRunAfter clean
copyAndroid.mustRunAfter build
copyJava.mustRunAfter copyAndroid
zipAndroid.mustRunAfter copyJava
zipJava.mustRunAfter zipAndroid
aarAndroid.mustRunAfter zipJava
docgen.mustRunAfter aarAndroid