language: android
jdk: oraclejdk8
sudo: true

before_cache:
  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/
cache:
  directories:
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/
    - $HOME/.android/build-cache
env:
 global:
  - TERM=dumb
  - ANDROID_API=23
  - EMULATOR_API_LEVEL=21
  - ANDROID_BUILD_TOOLS=25.0.0
  - ANDROID_ABI=armeabi-v7a
  - ANDROID_TAG=google_apis
  - ADB_INSTALL_TIMEOUT=30 # minutes
  - GRADLE_OPTS="-Dorg.gradle.daemon=false -Dorg.gradle.jvmargs="-Xmx2048m -XX:MaxPermSize=1024m -Xms512m -XX:+HeapDumpOnOutOfMemoryError"

android:
  components:
    - tools
    - platform-tools
    - build-tools-$ANDROID_BUILD_TOOLS
    - android-$ANDROID_API
    - android-$EMULATOR_API_LEVEL
    - extra-google-google_play_services
    - extra-google-m2repository
    - extra-android-m2repository # for design library
    - addon-google_apis-google-19 # google play services
    - sys-img-armeabi-v7a-addon-google_apis-google-$ANDROID_API_LEVEL
    - sys-img-armeabi-v7a-addon-google_apis-google-$EMULATOR_API_LEVEL
  licenses:
  - android-sdk-preview-license-.+
  - android-sdk-license-.+
  - google-gdk-license-.+
before_install:
  - export TERM=dumb  
before_script:
  - chmod +x gradlew
  - android list targets
  - echo no | android create avd --force -n test -t "android-"$EMULATOR_API_LEVEL --abi $ANDROID_ABI --tag $ANDROID_TAG
  - emulator -memory 2048 -avd test -no-skin -no-audio -no-window &
  - android-wait-for-emulator
  - adb shell input keyevent 82 &
  - ./gradlew --stop
  - adb -e logcat *:W | tee logcat.log > /dev/null 2>&1 &

script: 
  - TERM=dumb ./gradlew clean connectedAndroidTest -PdisablePreDex --stacktrace release --no-daemon

after_success:
  - bash <(curl -s https://codecov.io/bash) -t f75e0e13-72a2-40f6-adee-d04e9cf62137

after_failure:
  - sudo apt-get install -qq lynx
  - export MY_MOD="android-lib"
  - export MY_LOG_DIR="$(pwd)/${MY_MOD}/build/reports/androidTests/connected/"
  - pwd && cd "${MY_LOG_DIR:-.}" && pwd && ls -al
  - sudo apt-get install -qq lynx && lynx --dump index.html > myIndex.log
  - lynx --dump com.android.builder.testing.ConnectedDevice.html > myConnectedDevice.log
  - lynx --dump com.android.builder.testing.html > myTesting.log
  - for file in *.log; do echo "$file"; echo "====================="; cat "$file"; done || true