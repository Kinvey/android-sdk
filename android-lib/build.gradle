apply plugin: 'com.android.library'
description = 'AndroidLib'
apply plugin: 'realm-android'

android {
  compileSdkVersion 28
  buildToolsVersion '28.0.3'

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_7
    targetCompatibility JavaVersion.VERSION_1_7
  }

  packagingOptions {
    exclude 'META-INF/NOTICE'
    exclude 'META-INF/LICENSE'
  }

  dexOptions {
    javaMaxHeapSize "4g"
  }

  defaultConfig {
    minSdkVersion 16
    targetSdkVersion 28
    multiDexEnabled true
    testInstrumentationRunner "com.kinvey.androidTest.store.data.cache.TestRunner"
  }
  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
      buildConfigField "boolean", "TRAVIS", System.getenv("TRAVIS") != null ? "true" : "false"
      buildConfigField "String", "KINVEY_APP_KEY", System.getenv("KINVEY_APP_KEY") != null ?
                '"'+System.getenv("KINVEY_APP_KEY")+'"' : "\"KINVEY_APP_KEY\""
      buildConfigField "String", "KINVEY_APP_SECRET", System.getenv("KINVEY_APP_SECRET") != null ?
                '"'+System.getenv("KINVEY_APP_SECRET")+'"' : "\"KINVEY_APP_SECRET\""
      buildConfigField "String", "SENDER_ID", System.getenv("SENDER_ID") != null ?
              '"'+System.getenv("SENDER_ID")+'"' : "\"SENDER_ID\""
    }
    debug {
      testCoverageEnabled true
      buildConfigField "boolean", "TRAVIS", System.getenv("TRAVIS") != null ? "true" : "false"
      buildConfigField "String", "KINVEY_APP_KEY", System.getenv("KINVEY_APP_KEY") != null ?
              '"'+System.getenv("KINVEY_APP_KEY")+'"' : "\"KINVEY_APP_KEY\""
      buildConfigField "String", "KINVEY_APP_SECRET", System.getenv("KINVEY_APP_SECRET") != null ?
              '"'+System.getenv("KINVEY_APP_SECRET")+'"' : "\"KINVEY_APP_SECRET\""
      buildConfigField "String", "SENDER_ID", System.getenv("SENDER_ID") != null ?
              '"'+System.getenv("SENDER_ID")+'"' : "\"SENDER_ID\""
    }
  }

  lintOptions {
    abortOnError false
  }
  packagingOptions {
    exclude 'META-INF/maven/com.google.guava/guava/pom.properties'
    exclude 'META-INF/maven/com.google.guava/guava/pom.xml'
  }

}

configurations {
  jaxDoclet
  classpaths
  compile.exclude module: 'guava-jdk5'
}

buildscript {
  repositories {
    mavenCentral()
    jcenter()
    maven {
      url "http://jcenter.bintray.com"
    }
    maven {
      url "http://dl.bintray.com/realm/maven"
    }
    maven {
      url "https://jitpack.io"
    }
    google()
  }
  dependencies {
    classpath 'com.android.tools.build:gradle:3.0.1'
    classpath "io.realm:realm-gradle-plugin:3.2.1"
  }

}

dependencies {
  jaxDoclet(group: 'com.kinvey', name: 'doclava-kinvey-custom', version: '1.0.6a')
  compile project(':java-api-core')
  // compile 'com.github.KeepSafe:ReLinker:1.1'
  /*compile('com.google.http-client:google-http-client:1.19.0') {
            exclude(module: 'xpp3')
            exclude(module: 'httpclient')
            exclude(module: 'junit')
            exclude(module: 'android')
            exclude(module: 'guava-jdk5')
        }*/
  compile('com.google.api-client:google-api-client:1.19.0') {
    exclude(module: 'xpp3')
    exclude(module: 'android')
  }
  compile('com.google.api-client:google-api-client-android:1.19.0') {
    exclude(module: 'google-play-services')
    exclude(module: 'xpp3')
  }
  compile('com.google.http-client:google-http-client-android:1.19.0') {
    exclude(module: 'xpp3')
    exclude(module: 'httpclient')
    exclude(module: 'junit')
    exclude(module: 'android')
    exclude(module: 'guava-jdk5')
  }
  compile('com.google.http-client:google-http-client-gson:1.19.0') {
    exclude(module: 'xpp3')
  }
  compile('com.google.http-client:google-http-client-jackson:1.19.0') {
    exclude(module: 'xpp3')
  }
  //compile 'com.google.guava:guava:18.0'
  classpaths files(new File(System.getenv('ANDROID_HOME') + '/platforms/android-19/android.jar'))
  classpaths files('build/classes/release')
  //testing
  androidTestCompile 'com.android.support:multidex-instrumentation:1.0.3'
  // Required -- JUnit 4 framework
  androidTestCompile 'junit:junit:4.12'
  // Optional -- Mockito framework
  androidTestCompile 'org.mockito:mockito-android:2.7.15'
  androidTestCompile 'com.android.support:support-annotations:28.0.0'
  androidTestCompile 'com.android.support.test:runner:1.0.2'
  androidTestCompile 'com.android.support.test:rules:1.0.2'

  // Unit Testing
  testCompile 'io.reactivex:rxjava:1.1.0'
  testCompile 'junit:junit:4.12'
  testCompile "org.robolectric:robolectric:3.0"
  testCompile "org.mockito:mockito-core:1.10.19"
  testCompile 'org.robolectric:shadows-support-v4:3.0'
  testCompile "org.powermock:powermock-module-junit4:1.6.5"
  testCompile "org.powermock:powermock-module-junit4-rule:1.6.5"
  testCompile "org.powermock:powermock-api-mockito:1.6.5"
  testCompile "org.powermock:powermock-classloading-xstream:1.6.5"

  // Optional -- Hamcrest library
  androidTestCompile 'org.hamcrest:hamcrest-library:1.3'
  compile 'com.google.code.gson:gson:2.4'
  compile 'com.android.support:appcompat-v7:28.0.0'
  compile 'com.android.support:support-v4:28.0.0'
  compile 'org.codehaus.jackson:jackson-core-asl:1.9.12'
  compile 'com.google.android.gms:play-services:10.2.1'
  compile 'com.google.android.gms:play-services-ads:10.2.1'
  compile 'com.google.android.gms:play-services-identity:10.2.1'
  compile 'com.google.android.gms:play-services-gcm:10.2.1'
  compile 'io.reactivex:rxjava:1.1.0'
}

task docgen(type: Javadoc) {

  source = android.sourceSets.main.java.srcDirs

  options.docletpath = files("../tools/doclava-kinvey-custom.jar").asType(List)
  options.doclet = "com.google.doclava.Doclava"
  maxMemory = "1024m"
  classpath = configurations.classpaths + configurations.compile + configurations.testCompile
  title = null

  options.bootClasspath = [
      file(System.getenv('JAVA_HOME') + "/jre/lib/rt.jar"),
      file(System.getenv('ANDROID_HOME') + "/platforms/android-10/android.jar")
  ]
  options.overview = "javadoc/overview.html"
  options.addStringOption("quiet")
  options.addStringOption("hdf", "project.name AndroidLib")
  options.addStringOption("stubs", "target/stubs")
  options.addStringOption("federate com.kinvey.java", "http://devcenter.kinvey.com/android-v3.0/reference/api/java/reference/")
  options.addStringOption("federationxml com.kinvey.java", "../java-api-core/target/apidocs/api.xml")
  options.destinationDirectory = file("../../../devcenter/content/reference/android-v3.0/api")
  //options.addStringOption("d", "target/apidocs")
 // options.addStringOption("d", "../../../devcenter/content/reference/android-v3.0/api")
}

task superJar(type: Jar) {
  from configurations.compile
  archiveName = "superjar.jar"
  destinationDir = new File("build/outputs/superjar")
}

//cleanTest.mustRunAfter clean
cleanDocgen.mustRunAfter clean
build.mustRunAfter cleanDocgen
docgen.mustRunAfter build


