apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'realm-android'
apply plugin: 'org.jetbrains.dokka-android'
apply plugin: 'com.github.dcendents.android-maven'

group = 'com.github.Kinvey'
description = 'AndroidLib'

android {
  compileSdkVersion 29
  buildToolsVersion "29.0.2"

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  dexOptions {
    javaMaxHeapSize "4g"
  }

  sourceSets {
    androidTest {
      java.srcDirs += [ 'src/androidTest/java' ]
    }
  }

  defaultConfig {
    minSdkVersion 16
    targetSdkVersion 29
    multiDexEnabled true
    testInstrumentationRunner "com.kinvey.androidTest.store.data.cache.TestRunner"
  }
  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
      buildConfigField "boolean", "TRAVIS", System.getenv("TRAVIS") != null ? "true" : "false"
      buildConfigField "String", "KINVEY_APP_KEY", System.getenv("KINVEY_APP_KEY") != null ?
                '"'+System.getenv("KINVEY_APP_KEY")+'"' : "\"KINVEY_APP_KEY\""
      buildConfigField "String", "KINVEY_APP_SECRET", System.getenv("KINVEY_APP_SECRET") != null ?
                '"'+System.getenv("KINVEY_APP_SECRET")+'"' : "\"KINVEY_APP_SECRET\""
      buildConfigField "String", "SENDER_ID", System.getenv("SENDER_ID") != null ?
              '"'+System.getenv("SENDER_ID")+'"' : "\"SENDER_ID\""
    }
    debug {
      testCoverageEnabled true
      buildConfigField "boolean", "TRAVIS", System.getenv("TRAVIS") != null ? "true" : "false"
      buildConfigField "String", "KINVEY_APP_KEY", System.getenv("KINVEY_APP_KEY") != null ?
              '"'+System.getenv("KINVEY_APP_KEY")+'"' : "\"KINVEY_APP_KEY\""
      buildConfigField "String", "KINVEY_APP_SECRET", System.getenv("KINVEY_APP_SECRET") != null ?
              '"'+System.getenv("KINVEY_APP_SECRET")+'"' : "\"KINVEY_APP_SECRET\""
      buildConfigField "String", "SENDER_ID", System.getenv("SENDER_ID") != null ?
              '"'+System.getenv("SENDER_ID")+'"' : "\"SENDER_ID\""
    }
  }

  lintOptions {
    abortOnError true
  }

  packagingOptions {
    exclude 'META-INF/maven/com.google.guava/guava/pom.properties'
    exclude 'META-INF/maven/com.google.guava/guava/pom.xml'
  }

  dokka {
    outputFormat = 'javadoc'
    jdkVersion = 8
    outputDirectory = file("../../devcenter/content/reference/android-v3.0/api/android-lib")
    sourceDirs = files('src/main')
  }
}

configurations {
  compile.exclude module: 'guava-jdk5'
  all {
    exclude module: 'httpclient'
  }
}

buildscript {
  ext.kotlin_version = '1.3.41'
  ext.androidx_version = '1.2.0'
  ext.google_http_client_version = '1.19.0' //TODO: Investigate, with newer version than 1.19.0 it cause problems with save data in ClassHash class

  repositories {
    mavenCentral()
    jcenter()
    google()
    maven { url "https://jitpack.io" }
  }

  dependencies {
    classpath 'com.android.tools.build:gradle:3.4.2'
    classpath "io.realm:realm-gradle-plugin:5.8.0"
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    classpath "org.jetbrains.dokka:dokka-android-gradle-plugin:$dokkaVersion"
    classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'
  }
}

dependencies {
  implementation project(':java-api-core')
  // compile 'com.github.KeepSafe:ReLinker:1.1'
  implementation("com.google.api-client:google-api-client:$google_http_client_version") {
    exclude(module: 'xpp3')
    exclude(module: 'android')
  }
  implementation("com.google.api-client:google-api-client-android:$google_http_client_version") {
    exclude(module: 'google-play-services')
    exclude(module: 'xpp3')
  }
  implementation("com.google.http-client:google-http-client-android:$google_http_client_version") {
    exclude(module: 'xpp3')
    exclude(module: 'httpclient')
    exclude(module: 'junit')
    exclude(module: 'android')
    exclude(module: 'guava-jdk5')
  }
  implementation("com.google.http-client:google-http-client-gson:$google_http_client_version") {
    exclude(module: 'xpp3')
  }
  implementation("com.google.http-client:google-http-client-jackson:$google_http_client_version") {
    exclude(module: 'xpp3')
  }
  implementation 'com.google.guava:guava:24.1-jre'

  //classpaths files(new File(System.getenv('ANDROID_HOME') + '/platforms/android-28/android.jar'))
  //classpaths files('build/classes/release')

  // Required -- JUnit 4 framework
  androidTestImplementation 'junit:junit:4.12'
  // Optional -- Mockito framework
  androidTestImplementation group: 'org.mockito', name: 'mockito-core', version: '3.0.0'
  androidTestImplementation group: 'com.linkedin.dexmaker', name: 'dexmaker-mockito', version: '2.25.0'
  androidTestImplementation group: 'androidx.test', name: 'runner', version: androidx_version
  androidTestImplementation group: 'androidx.test', name: 'rules', version: androidx_version

  // Unit Testing
  testImplementation 'io.reactivex:rxjava:1.1.0'
  testImplementation 'junit:junit:4.12'
  testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.0.0'

  // Optional -- Hamcrest library
  androidTestImplementation 'org.hamcrest:hamcrest-library:1.3'
  implementation 'org.codehaus.jackson:jackson-core-asl:1.9.13'
  implementation 'io.reactivex:rxjava:1.1.0'
  implementation 'com.google.code.gson:gson:2.8.5'

  // Google Firebase Libs
  implementation 'com.google.firebase:firebase-core:17.0.1'
  implementation 'com.google.firebase:firebase-messaging:19.0.1'

  // Multidex Support
  implementation group: 'androidx.multidex', name: 'multidex', version: '2.0.1'
  // Multidex Support for testing
  androidTestImplementation group: 'androidx.multidex', name: 'multidex-instrumentation', version: '2.0.0'
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}

task superJar(type: Jar) {
  from configurations.compile
  archiveName = "superjar.jar"
  destinationDir = new File("build/outputs/superjar")
}


//cleanTest.mustRunAfter clean
cleanDokka.mustRunAfter clean
build.mustRunAfter cleanDokka
dokka.mustRunAfter build
