apply plugin: 'java'

sourceCompatibility = 1.7
targetCompatibility = 1.7

apply plugin: "jacoco"
description = 'JavaApiCore'

compileJava.options.encoding = 'UTF-8'

sourceSets {
    main {
        java {
            srcDir 'src'
        }
    }
    test{
        java{
            srcDir 'test'
        }
    }
}

jacoco {
    toolVersion = "0.7.1.201405082137"
    reportsDir = file("$buildDir/customJacocoReportDir")
}

configurations {
    jaxDoclet
}


dependencies {
    jaxDoclet(group: 'com.kinvey', name: 'doclava-kinvey-custom', version: '1.0.6a')
    compile 'com.google.guava:guava:18.0'
    compile 'com.google.http-client:google-http-client-jackson:1.19.0'
    compile 'com.google.code.gson:gson:2.1'
    testCompile('com.google.http-client:google-http-client-gson:1.19.0') {
        exclude(module: 'xpp3')
    }
    testCompile 'junit:junit:4.10'
    testCompile 'org.mockito:mockito-all:1.9.0'
    compile('com.google.http-client:google-http-client:1.19.0') {
        exclude(module: 'xpp3')
        exclude(module: 'httpclient')
        exclude(module: 'junit')
        exclude(module: 'android')
        exclude(module: 'guava-jdk5')
    }
    compile 'com.google.dexmaker:dexmaker:1.2'
    compile 'org.apache.ant:ant:1.8.0'
}

task docgen(type: Javadoc) {
    

    source = sourceSets.main.java.srcDirs

    options.docletpath = files("../tools/doclava-kinvey-custom.jar").asType(List)
    options.doclet = "com.google.doclava.Doclava"
    maxMemory = "1024m"
    classpath = configurations.compile
    title = null

    options.bootClasspath new File(System.getenv('JAVA_HOME') + "/jre/lib/rt.jar")
    
    options.addStringOption("hdf", "project.name JavaApiCore")
    options.addStringOption("stubs", "target/stubs")
    options.addStringOption("apixml", "target/apidocs/api.xml")
    options.addStringOption("d", "../../../devcenter/content/reference/android-v3.0/api/java")
}



cleanTest.mustRunAfter clean
cleanDocgen.mustRunAfter cleanTest
build.mustRunAfter cleanDocgen
docgen.mustRunAfter build
