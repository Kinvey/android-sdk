/*
 *  Copyright (c) 2016, Kinvey, Inc. All rights reserved.
 *
 * This software is licensed to you under the Kinvey terms of service located at
 * http://www.kinvey.com/terms-of-use. By downloading, accessing and/or using this
 * software, you hereby accept such terms of service  (and any agreement referenced
 * therein) and agree that you have read, understand and agree to be bound by such
 * terms of service and are of legal age to agree to such terms with Kinvey.
 *
 * This software contains valuable confidential and proprietary information of
 * KINVEY, INC and is subject to applicable licensing agreements.
 * Unauthorized reproduction, transmission or distribution of this file and its
 * contents is a violation of applicable laws.
 *
 */

package com.kinvey.java.model

import com.google.api.client.json.GenericJson
import com.google.api.client.util.Data
import com.google.api.client.util.Key

/**
 * This class maintains information about a file that has been stored with Kinvey.  Every file has a unique ID, as well as other attributes
 * including but not limited too: filename, size, mimetype, acl, and a public access flag.
 *
 *
 * This object can also maintain any custom attributes, which can be set via accessor methods provided by [GenericJson]
 *
 * @author edwardf
 */
open class FileMetaData : GenericJson {


    @Key("_id")
    var id: String? = null

    @Key("_filename")
    var fileName: String? = null

    @Key("size")
    var fileSize: Long = 0

    override val size: Int
        get() = fileSize.toInt()

    @Key("mimeType")
    var mimetype: String? = null

    @Key("_public")
    var isPublic = false

    @Key("_acl")
    var acl: KinveyMetaData.AccessControlList? = null

    @Key("_kmd")
    var kinveyMetaData: KinveyMetaData? = null

    @Key("_uploadURL")
    var uploadUrl: String? = null

    @Key("_downloadURL")
    var downloadURL: String? = null

    /// Expiration data of the 'downloadURL'.
    private val expiresAt: Data? = null

    var uploadHeaders: Map<String, String>? = null

    var resumeDownloadData: Map<String, Any>? = null

    var etag: String? = null

    open var path: String? = null

    var pathUrl: String? = null

    /**
     * Create a new instance, without setting any fields
     *
     * If an ID is not set, it will be auto-generated by the service
     *
     */
    constructor()

    /**
     * Create a new instance, and set the id of the file
     *
     * @param id - the _id of the new file meta data
     */
    constructor(id: String) {
        this.id = id
    }

    fun setSize(size: Long) {
        fileSize = size
    }
}
